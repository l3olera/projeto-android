@charset "UTF-8";

@import url('https://fonts.googleapis.com/css2?family=Bebas+Neue&display=swap');

@font-face {
    font-family: 'Android';
    src: url('../../fontes/idroid.otf') format('opentype');
    font-weight: normal;
}

:root {
    --cor0: #c5ebd6; /*Para criar variável em CSS, antes de nomea-lá, deve colocar -- e ai sim o nome.*/
    --cor1: #83e1ad;
    --cor2: #3ddc84;
    --cor3: #2fa866;
    --cor4: #1a5c37;
    --cor5: #063d1e;

    --font-padrao: Arial, Verdana, Helvetica, sans-serif;
    --fonte-destaque: 'Bebas Neue', cursive;
    --font-android: 'Android', cursive;

} /*Raiz do documento, tudo que for inserido aqui servirá para o documento inteiro. Aqui possibilita criar variáveis, ou seja, permite criar variáveis globais para esse doc.*/

* {
    margin: 0px;
    padding: 0px;
}

body {
    background-color: var(--cor0); /*Para chamar uma variável criada para obter o valor dentro dela, basta você escrever "var()" e como parâmetro colocar o nome da variável JUNTO com os -- antes do nome, pois acho que isso é o identificador para o CSS de que aquilo é uma variável. */
    font-family: var(--font-padrao)
}

a.externo::after {
    content: '\00A0\1F517';
}

header {
    background-image: linear-gradient(to bottom, var(--cor3), var(--cor5));
    min-height: 150px;
    text-align: center;
    padding-top: 40px;
}

header > h1 {
    color: white;
    font-family: var(--fonte-destaque);
    font-size: 3em;
    font-weight: normal;
    margin-bottom: 20px;
    text-shadow: 2px 2px 0px rgba(0, 0, 0, 0.267);
}

header > p {
    font-family: var(--font-padrao);
    font-size: 1.2em;
    color: white;
    max-width: 600px;
    padding-right: 10px;
    padding-left: 10px;
    margin: auto;
    margin-bottom: 30px;
    text-shadow: 2px 2px 0px rgba(0, 0, 0, 0.315);
}

nav {
    background-color: var(--cor5);
    padding: 10px;
    box-shadow: 0px 7px 7px rgba(0,0,0,0.363);
}

nav > a {
    color: var(--cor1);
    padding: 10px;
    border-radius: 5px;
    text-decoration: none;
    font-weight: bold;
    transition-duration: 0.5s; /*Quando o mouse passar por cima do elemento a, ele vai demorar 0.5 segundos para fazer a transição ao novo modelo*/
}

nav > a:hover {
    background-color: var(--cor3);
    color: var(--cor5);
}

main {

    min-width: 300px;
    max-width: 1000px;
    margin: auto;
    margin-bottom: 30px;
    padding: 20px;
    background-color: white;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.408);
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
}

main h1{
    color: var(--cor5);
    font-family: var(--font-android);
    font-weight: normal;
    font-size: 1.8em;
}

main h2 {
    font-family: var(--font-android);
    color: var(--cor4);
    font-size: 1.3em;
    font-weight: normal;
    background-image: linear-gradient(to right, var(--cor1), transparent);
    text-indent: 8px;
}

main p {
    margin: 15px 0px;
    text-align: justify;
    text-indent: 30px;
    font-size: 1em;
    line-height: 2em; /*Permite configurar o espaçamentos entre linhas do parágrafo*/
} /*ATENÇÃO: QUANDO SE QUISER CONFIGURAR DIVERSOS ELEMENTOS IGUAIS, UTILIZANDO ESSE SELETOR COMO EXEMPLO, DENTRO DE UM GROUPING TAG OU QUALQUER OUTRO ELEMENTO, SENDO EM QUALQUER NÍVEL, NÃO COLOCA O ">" PQ ISSO CONSIDERA APENAS ELEMENTOS DO NÍVEL DO ELEMENTO E NÃO DE TODOS. Exemplo para ficar melhor a explicação, utilizando esse seletor, dentro da tag main desejo justificar todos os paragráfos que estão dentro dele, independente do nivel que ele esteja, e, assim, coloco desse jeito. Porém, por que não coloco utilizando o ">"? Utiliza-se essa indicação apenas quando deseja configurar um elemento filho do outro, se tivessemos colocado aqui não daria certo de configurar todos, porque tem um paragrafo dentro de um 'aside', ou seja, não englobaria como filho do main e assim não configuraria todos os paragros de todos os níveis. Por isso, utilizamos assim. Explicação de maneira informal, de acordo com esse exemplo, todas tag 'p' que estão no nível do 'p', independente se tiver dentro de outro grouping tag, como o aside, vai ficar justificado.*/

main strong {
    color: var(--cor4);
    font-weight: bolder;
}

main a {
    text-decoration: none;
    font-weight: bold;
    color: var(--cor5);
    background: var(--cor1);
    padding: 2px 6px;
}

main a:hover {
    text-decoration: underline;
    color: var(--cor4);
}

main img {
    width: 100%
}

div.video {
    background-color: var(--cor5);
    margin: 0px -20px 30px -20px;
    padding: 20px;
    padding-bottom: 59%;
    position: relative; /*Quando o position é relative, o elemento é posicionado em relação a si mesmo, já quando é absolute, o elemento tem sua posição relacionada a de seu elemento 'pai. Também, há a posição fixed que é relativo apenas ao documento <html> e não é afetado pela rolagem (Ou seja, fica fixo na área que ele estiver, imóvel). É importante destacar que o absolute e fixed são removidos do fluxo normal do documento, ou seja, os outros elementos consideram eles como inexistentes da página. Outrossim, tem-se o valor padrão, static, que posiciona na ordem normal da página. Por fim, há o sticky que é uma mistura de posição relative e fixed, onde é possível colocar em qualquer posição sem se relativa a alguem, pois ele é um 'relative', mas quando você for scrollar para baixo, ele vai continuar na tela, mesmo se o estado normal fosse 'desaparecer', ou seja, ficar naquela posição. Isso ocorre, devido sua mistura como 'fixed'. VALE RESSALTAR QUE O STICKY NÃO TEM SUPORTE PARA INTERNET EXPLORER E VERSÕES ANTERIORES DE OUTROS NAVEGADORES.*/
}

div.video > iframe {
    position: absolute;
    top: 5%; /*Top é a distancia entre a ponta superior esquerda do iframe com o topo da div relativo a encima dessa posição*/
    left: 5%; /*Left é a distancia entre a ponta superior esquerda do iframe com o canto esquerdo da div relativo a esquerda dessa posição*/
    width: 90%;
    height: 90%;
}

main img.pequena {
    max-width: 350px;
    display: block;
    margin: auto;
}

aside {
    background-color: var(--cor1);
    padding: 10px;
    border-radius: 10px;
    box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.281);
}

aside > h3 {
    background-color: var(--cor4);
    color: white;
    padding: 10px;
    margin: -10px -10px 0px -10px; /*Quando se utiliza um número negativo, ele cresce para fora, ou seja, nesse exemplo está vazando 10 pixel para fora em cima, na direita e na esquerda.*/
    border-radius: 10px 10px 0px 0px;
}

aside > ul {
    list-style-type: '\2714\00A0\00A0'; /*Atributo que permite configurar o tipo de índice que vai aparecer na lista, ao invés, do 'disc' que é padrão. Para conseguir inserir algum emoji, basta pegar o código dele e colocar depois de um contra barra (\). (\00A0) = espaço vazio, por isso ele dois espaços depois do check. NO ENTANTO, NÃO É COMPATÍVEL COM TODO TIPO DE NAVEGADOR*/
    list-style-position: inside; /*Atributo que configura se a posição da lista ficará para fora de seu 'pai' ou dentro, sendo os valores 'outside' para fora e 'inside' para dentro*/
    columns: 2; /*Atributo que divide a lista em colunas*/
}

footer {
    background-color:var(--cor5);
    color: white;
    text-align: center;
    font-size: 0.8em;
    padding: 5px;
}

footer a {
    color: white;
    font-weight: bolder;
    text-decoration: none;
}

footer a:hover {
    text-decoration: underline;
    color: var(--cor1);
}